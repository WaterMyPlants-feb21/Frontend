{"version":3,"sources":["../../source/react-hook-form/ReactHookFormInput.js"],"names":["ReactHookFormInput","ref","Component","name","defaultValue","control","rules","onChange_","onChange","onBlur_","onBlur","rest","internalRef","setRef","instance","current","onFocus","focus","undefined","value","onChangeCombined","onBlurCombined","event","React","forwardRef","propTypes","PropTypes","elementType","isRequired","string","object","func"],"mappings":"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","sourcesContent":["import React, { useRef, useCallback } from 'react'\r\nimport { Controller } from 'react-hook-form'\r\nimport PropTypes from 'prop-types'\r\n\r\nlet ReactHookFormInput = ({\r\n  Component,\r\n  name,\r\n  defaultValue,\r\n  control,\r\n  rules,\r\n  onChange: onChange_,\r\n  onBlur: onBlur_,\r\n  ...rest\r\n}, ref) => {\r\n  const internalRef = useRef()\r\n  const setRef = useCallback((instance) => {\r\n    internalRef.current = instance\r\n    if (ref) {\r\n      if (typeof ref === 'function') {\r\n        ref(instance)\r\n      } else {\r\n        ref.current = instance\r\n      }\r\n    }\r\n  }, [])\r\n  const onFocus = useCallback(() => {\r\n    // internalRef.current.disabled = false\r\n    internalRef.current.focus()\r\n  }, [])\r\n  // `feact-hook-form` doesn't know how to properly handle `undefined` values.\r\n  // https://github.com/react-hook-form/react-hook-form/issues/2990\r\n  defaultValue = defaultValue === undefined ? null : defaultValue\r\n  return (\r\n    <Controller\r\n      control={control}\r\n      name={name}\r\n      defaultValue={defaultValue}\r\n      rules={rules}\r\n      onFocus={onFocus}\r\n      render={({ value, onChange, onBlur }) => {\r\n        const onChangeCombined = useCallback((value) => {\r\n          onChange(value)\r\n          if (onChange_) {\r\n            onChange_(value)\r\n          }\r\n        }, [\r\n          onChange,\r\n          onChange_\r\n        ])\r\n        const onBlurCombined = useCallback((event) => {\r\n          onBlur(event)\r\n          if (onBlur_) {\r\n            onBlur_(event)\r\n          }\r\n        }, [\r\n          onBlur,\r\n          onBlur_\r\n        ])\r\n        return (\r\n          <Component\r\n            ref={setRef}\r\n            {...rest}\r\n            value={value}\r\n            onChange={onChangeCombined}\r\n            onBlur={onBlurCombined}/>\r\n        )\r\n      }}/>\r\n  )\r\n}\r\n\r\nReactHookFormInput = React.forwardRef(ReactHookFormInput)\r\n\r\nReactHookFormInput.propTypes = {\r\n  Component: PropTypes.elementType.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  defaultValue: PropTypes.string,\r\n  control: PropTypes.object.isRequired,\r\n  rules: PropTypes.object.isRequired,\r\n  onChange: PropTypes.func,\r\n  onBlur: PropTypes.func\r\n}\r\n\r\nexport default ReactHookFormInput\r\n"],"file":"ReactHookFormInput.js"}